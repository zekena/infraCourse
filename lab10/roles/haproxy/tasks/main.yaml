- name: install haproxy
  apt:
    state: latest
    name: haproxy

- name: Enable and start HAProxy
  service:
    name: haproxy
    state: started
    enabled: yes

- name: Configure HAProxy
  template:
    src: templates/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    validate: haproxy -c -f %s
  notify:
    Reload HAProxy
- name: check that file exists
  stat:
    path: /opt/go1.13.3.linux-amd64.tar.gz
  register: stat_result1

- name: download go
  get_url:
    url: https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz
    dest: /opt/go1.13.3.linux-amd64.tar.gz
  when: stat_result1.stat.exists == False
- name: folder
  file:
    path: /opt/go
    state: directory
    mode: '0755'
- name: check that file exists
  stat:
    path: /opt/go1.13.3.linux-amd64.tar.gz
  register: stat_result2
- name: untar
  unarchive:
    src: /opt/go1.13.3.linux-amd64.tar.gz
    dest: /opt/go
    remote_src: yes
  when: stat_result2.stat.exists == False
- name: Create a symbolic link
  file:
    src: /opt/go/go/bin/go
    dest: /usr/local/bin/go
    state: link

- name: Check that the file exists
  stat:
    path: /root/go/src/github.com/prometheues/haproxy_exporter/haproxy_exporter.go
  register: stat_result

- name: go get
  shell: "go get github.com/prometheus/haproxy_exporter"
  when: stat_result.stat.exists == False

- name: copy binary
  copy:
    src: /root/go/bin/haproxy_exporter
    dest: /usr/local/bin/haproxy_exporter
    mode: u=rwx,g=rx,o=rx
    remote_src: yes

- name: make a service
  template:
    src: haproxy_exporter.service.j2
    dest: /etc/systemd/system/haproxy_exporter.service
- name: start haproxy service
  service:
    name: haproxy_exporter
    state: started
